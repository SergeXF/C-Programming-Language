//题目内容：
//
//UTC是世界协调时间，BJT是北京时间，UTC时间相当于BJT减去8。现在，你的程序要读入一个整数，表示BJT的时和分。
// 整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而分小于10分，需要保留十位上的0；如果小时是0而分小于10分的，则不需要保留十位上的0。
// 如1124表示11点24分，而905表示9点5分，36表示0点36分，7表示0点7分。
//
//有效的输入范围是0到2359，即你的程序不可能从测试服务器读到0到2359以外的输入数据。
//
//你的程序要输出这个时间对应的UTC时间，输出的格式和输入的相同，即输出一个整数，表示UTC的时和分。
// 整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而分小于10分，需要保留十位上的0；如果小时是0而分小于10分的，则不需要保留十位上的0。
//
//提醒：要小心跨日的换算。
//
//
//输入格式 :
//
//一个整数，表示BJT的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而分小于10分，需要保留十位上的0；如果小时是0而分小于10分的，则不需要保留十位上的0。
//
//
//输出格式：
//
//一个整数，表示UTC的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而分小于10分，需要保留十位上的0；如果小时是0而分小于10分的，则不需要保留十位上的0。
//
//
//输入样例：
//
//803
//
//
//输出样例：
//
//3
//时间限制：500ms内存限制：32000kb

my_()
{
	printf("my_\n");
	int i = 0;
	scanf("%d", &i);
	int a = i % 10000 / 1000;
	int b = i % 1000 / 100;
	int c = i % 100;
	int d = i % 10;
	if (d > 0)
	{
		c = i % 100 / 10;
	}
	int m = a * 10 + b;
	int n = c * 10 + d;
	if (m < 8)
	{
		m += 24;
	}
	m -= 8;
	printf("%d\n", m * 100 + c * 10 + d);
}
AI_()
{
	printf("AI_\n");
	int BJT, UTC, hour, minute;
	scanf("%d", &BJT); // 读入北京时间
	hour = BJT / 100; // 计算小时数
	minute = BJT % 100; // 计算分钟数
	hour -= 8; // 将北京时间转换为世界协调时间
	if (hour < 0)
	{
		hour += 24;// 处理跨日的情况
	}
	UTC = hour * 100 + minute; // 计算UTC时间
	printf("%d\n", UTC); // 输出UTC时间
}
int main()
{
	my_();
	AI_();
	return 0;
}
