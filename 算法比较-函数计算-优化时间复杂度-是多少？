//f(x) = a0 + a1 * x + ...an-1 * x^n-1 + an * x^n
//不好的写法：太慢啦！！！
double f1(int n, double a[], double x)
{
	int i;
	double p = a[0];
	for (i = 1; i <= n; i++)
		p += (a[i] * pow(x, i));
	return p;
}

//好的写法：f(x) = a0 + x(a1 + x(...(an-1 + x(an))...));
double f2(int n, double a[], double x)
{
	int i;
	double p = a[n];
	for (i = n; i > 0; i--)
		p = a[i - 1] + x * p;
	return p;
}

clock_t start, stop;
double duration;
#define MAX_N 10000
#define MAX_K 1e1//重复次数
double f1(int n, double a[], double x);
double f2(int n, double a[], double x);
int main()
{
	int i;
	double a[MAX_N];
	for (i = 0; i < MAX_N; i++)a[i] = (double)i;

	start = clock();
	for (i = 0; i < MAX_K; i++)
	{
		f1(MAX_N - 1, a, 11);
	}
	stop = clock();
	duration = ((double)(stop - start)) / CLK_TCK/MAX_K;
	printf("ticks1 = %f\n", (double)(stop - start));
	printf("duration1 = %6.2e\n", duration);

	start = clock();
	for (i = 0; i < MAX_K; i++)
	{
		f2(MAX_N - 1, a, 11);
	}
	stop = clock();
	duration = ((double)(stop - start)) / CLK_TCK/MAX_K;
	printf("ticks2 = %f\n", (double)(stop - start));
	printf("duration2 = %6.2e\n", duration);

	return 0;
}
