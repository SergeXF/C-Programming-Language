//顺序表
#pragma once
#define N 1000
void SeqListInsert();
void SeqListErase();
typedef int SLDataType;
typedef struct SeqList
{
	SLDataType* a;
	int size;
	int capacity;
}SL;
//初始化
void SeqListInit(SL* ps)
{
	ps->a = NULL;
	ps->size = ps->capacity = 0;
}
//检查
void SeqListCheckCapacity(SL* ps)
{
	if (ps->size == ps->capacity)
	{
		int newcapacity = ps->capacity == 0 ? 4 : ps->capacity * 2;
		SLDataType* tmp = (SLDataType*)realloc(ps->a, newcapacity * sizeof(SLDataType));
		if (tmp == NULL)
		{
			printf("realloc fail\n");
			exit(-1);
		}
		ps->a = tmp;
		ps->capacity = newcapacity;
	}
}
//打印
void SeqListPrint(SL* ps)
{
	for (int i = 0; i < ps->size; i++)
	{
		printf("%d ", ps->a[i]);
	}
	printf("\n");
}
//释放
void SeqListDestroy(SL* ps)
{
	free(ps->a);
	ps->a = NULL;
	ps->capacity = ps->size = 0;
}
//尾插
void SeqListPushBack(SL* ps, SLDataType x)
{
	//SeqListCheckCapacity(ps);
	//ps->a[ps->size] = x;
	//ps->size++;
	SeqListInsert(ps, ps->size, x);
}
//尾删
void SeqListPopBack(SL* ps)
{
	//if (ps->size > 0)
	//{
	//	//ps->a[ps->size - 1] = 0;
	//	ps->size--;
	//}
	////assert(ps->size > 0);
	////ps->size--;
	if (ps->size > 0)//为什么要写这一句？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？
	{
		SeqListErase(ps, ps->size - 1);
	}
}
//头插
void SeqListPushFront(SL* ps, SLDataType x)
{
	//SeqListCheckCapacity(ps);
	//int end = ps->size - 1;
	//while (end >= 0)
	//{
	//	ps->a[end + 1] = ps->a[end];
	//	--end;
	//}
	//ps->a[0] = x;
	//ps->size++;
	SeqListInsert(ps, 0, x);
}
//头删
void SeqListPopFront(SL* ps)
{
	assert(ps->size > 0);
	//int begin = 1;
	//while (begin < ps->size)
	//{
	//	ps->a[begin - 1] = ps->a[begin];
	//	++begin;
	//}
	//ps->size--;
	SeqListErase(ps, 0);
}
//找到了返回x位置下标，没有找到返回-1(如果排过序，可以二分查找)//有BUG？？？？？？？？？？？？？？？？
int SeqListFind(SL* ps, SLDataType x)
{
	for (int i = 0; i < ps->size; i++)
	{
		if (ps->a[i] == x)
		{
			//printf("%d\n", i);//如何在调用这个函数时不打印这个，而用SeqListPrint时打印？？？？？？
			return i;
		}
	}
	return -1;
}
//指定pos小标位置插入
void SeqListInsert(SL* ps, int pos, SLDataType x)
//当返回值为void的函数调用返回值为void的函数时(如头插/尾插的改版)，会报错，这个返回值改成int就行了
//但是单独分别调用就不会有这种问题(如头插/尾插的初版)
//先对函数进行声明再进行函数，最后调用此函数就没有问题啦
{
	if (pos > ps->size || pos < 0)
	{
		printf("pos incalid\n");
		return;
	}
	//assert(pos >= 0 && pos <= ps->size);
	SeqListCheckCapacity(ps);
	int end = ps->size - 1;
	while (end >= pos)
	{
		ps->a[end + 1] = ps->a[end];
		--end;
	}
	ps->a[pos] = x;
	ps->size++;
}
//删除pos位置的数据
void SeqListErase(SL* ps, int pos)
{
	if (pos < 0 || pos >= ps->size)
	{
		printf("pos invalid\n");
		return;
	}
	//assert(pos >= 0);//为什么我不能用这个断言？？？？？问题出在哪？？？？？？？
	//assert(pos < ps->size);
	int begin = pos + 1;
	while (begin < ps->size)
	{
		ps->a[begin - 1] = ps->a[begin];
		++begin;
	}
	ps->size--;
}
void TestSeqList1()
{
	SL sl;
	SeqListInit(&sl);
	SeqListPushBack(&sl, 1);
	SeqListPushBack(&sl, 2);
	SeqListPushBack(&sl, 3);
	SeqListPushBack(&sl, 4);
	SeqListPushBack(&sl, 5);
	SeqListPrint(&sl);
	SeqListPopBack(&sl);
	SeqListPopBack(&sl);
	SeqListPopBack(&sl);
	SeqListPopBack(&sl);
	SeqListPopBack(&sl);
	SeqListPopBack(&sl);
	SeqListPrint(&sl);
	SeqListPushBack(&sl, 1);
	SeqListPushBack(&sl, 2);
	SeqListPushBack(&sl, 3);
	SeqListPushBack(&sl, 4);
	SeqListPushBack(&sl, 5);
	SeqListPrint(&sl);
	SeqListPushFront(&sl, 10);
	SeqListPushFront(&sl, 20);
	SeqListPushFront(&sl, 30);
	SeqListPushFront(&sl, 40);
	SeqListPrint(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	SeqListPopFront(&sl);
	//SeqListPopFront(&sl);//有BUG，自己修！！！！！
	SeqListPrint(&sl);
	SeqListPushBack(&sl, 11);
	SeqListPushBack(&sl, 22);
	SeqListPrint(&sl);
	SeqListInsert(&sl, 1, 30);
	SeqListPrint(&sl);
	SeqListFind(&sl, 30);
	int pos = SeqListFind(&sl, 30);
	if (pos != -1)
	{
		SeqListInsert(&sl, pos, 40);
		SeqListPrint(&sl);
	}
	SeqListErase(&sl, 1);
	SeqListPrint(&sl);
	/*int*/ pos = SeqListFind(&sl, 30);//重定义了，所以这里不用int pos
	if (pos != -1)
	{
		SeqListErase(&sl, pos);
	}
	SeqListPrint(&sl);
	SeqListDestroy(&sl);
}
void menu()
{
	SL sl;
	SeqListInit(&sl);
	//自己写菜单，最好写成鹏哥那种！！！！！（目前还不是鹏哥那种）
	int input = 0;
	int x;
	while (input != -1)
	{
		printf("1.头插 2.头删 3.尾插 4.尾删 5.打印 -1退出\n");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			printf("头插，以-2结束");
			scanf("%d", &x);
			while (x != -2)
			{
				SeqListPushFront(&sl, x);//缺点，不能插入-2，但可以专门搞个插入负数的选项，比如退出是0什么的
				scanf("%d", &x);
			}
			break;
		case 2:
			SeqListPopFront(&sl);
			break;
		case 3:
			printf("尾插，以-1结束");
			scanf("%d", &x);
			while (x != -2)
			{
				SeqListPushBack(&sl, x);//缺点，不能插入-2，但可以专门搞个插入负数的选项，比如退出是0什么的
				scanf("%d", &x);
			}
			break;
		case 4:
			SeqListPopBack(&sl);
			break;
		case 5:
			SeqListPrint(&sl);
			break;
		case 6:
			break;
		default:
			printf("输入错误\n");
				break;
		}
	}
	SeqListDestroy(&sl);
}
int main()
{
	//menu();//菜单好玩，顾客好用，不方便调试
	TestSeqList1();//单元测试，程序员好用，方便调试
	return 0;
}
